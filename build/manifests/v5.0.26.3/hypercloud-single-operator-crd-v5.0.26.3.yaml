apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: hypercloud5-system/hypercloud-single-operator-serving-cert
    controller-gen.kubebuilder.io/version: v0.3.0
  name: namespaceclaims.claim.tmax.io
spec:
  additionalPrinterColumns:
  - JSONPath: .resourceName
    name: ResourceName
    type: string
  - JSONPath: .status.status
    name: Status
    type: string
  - JSONPath: .status.reason
    name: Reason
    type: string
  group: claim.tmax.io
  names:
    kind: NamespaceClaim
    listKind: NamespaceClaimList
    plural: namespaceclaims
    shortNames:
    - nsc
    singular: namespaceclaim
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: NamespaceClaim is the Schema for the namespaceclaims API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        resourceName:
          description: namespaceName is name of the namespace which will be created
          type: string
        spec:
          description: Spec is ResourceQuotaSpec of NamespaceClaim
          properties:
            hard:
              additionalProperties:
                anyOf:
                - type: integer
                - type: string
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              description: 'hard is the set of desired hard limits for each named
                resource. "limits.cpu" and "limits.memory" must be required. More
                info: https://kubernetes.io/docs/concepts/policy/resource-quotas/'
              type: object
          required:
          - hard
          type: object
        status:
          description: Status shows the present status of the NamespaceClaim
          properties:
            lastTransitionTime:
              description: LastTransitionTime shows the time when the status changed
                in last
              format: date-time
              type: string
            message:
              description: Message shows log when the status changed in last
              type: string
            reason:
              description: Reason shows why the status changed in last
              type: string
            status:
              description: Status shows the present status of the NamespaceClaim
              enum:
              - Awaiting
              - Approved
              - Rejected
              - Error
              - Namespace Deleted
              type: string
          type: object
      required:
      - resourceName
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: hypercloud5-system/hypercloud-single-operator-serving-cert
    controller-gen.kubebuilder.io/version: v0.3.0
  name: resourcequotaclaims.claim.tmax.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.status
    name: Status
    type: string
  - JSONPath: .status.reason
    name: Reason
    type: string
  group: claim.tmax.io
  names:
    kind: ResourceQuotaClaim
    listKind: ResourceQuotaClaimList
    plural: resourcequotaclaims
    shortNames:
    - rqc
    singular: resourcequotaclaim
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ResourceQuotaClaim is the Schema for the resourcequotaclaims API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec is ResourceQuotaSpec of NamespaceClaim
          properties:
            hard:
              additionalProperties:
                anyOf:
                - type: integer
                - type: string
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              description: 'hard is the set of desired hard limits for each named
                resource. "limits.cpu" and "limits.memory" must be required. More
                info: https://kubernetes.io/docs/concepts/policy/resource-quotas/'
              type: object
          required:
          - hard
          type: object
        status:
          description: Status shows the present status of the ResourceQuotaClaim
          properties:
            lastTransitionTime:
              description: LastTransitionTime shows the time when the status changed
                in last
              format: date-time
              type: string
            message:
              description: Message shows log when the status changed in last
              type: string
            reason:
              description: Reason shows why the status changed in last
              type: string
            status:
              description: Status shows the present status of the NamespaceClaim
              enum:
              - Awaiting
              - Approved
              - Rejected
              - Error
              - Resource Quota Deleted
              type: string
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: rolebindingclaims.claim.tmax.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.status
    name: Status
    type: string
  - JSONPath: .status.reason
    name: Reason
    type: string
  group: claim.tmax.io
  names:
    kind: RoleBindingClaim
    listKind: RoleBindingClaimList
    plural: rolebindingclaims
    shortNames:
    - rbc
    singular: rolebindingclaim
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: RoleBindingClaim is the Schema for the rolebindingclaims API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        roleRef:
          description: RoleRef contains information that points to the role being
            used
          properties:
            apiGroup:
              description: APIGroup is the group for the resource being referenced
              type: string
            kind:
              description: Kind is the type of resource being referenced
              type: string
            name:
              description: Name is the name of resource being referenced
              type: string
          required:
          - apiGroup
          - kind
          - name
          type: object
        status:
          description: Status shows the present status of the RoleBindingClaim
          properties:
            lastTransitionTime:
              description: LastTransitionTime shows the time when the status changed
                in last
              format: date-time
              type: string
            message:
              description: Message shows log when the status changed in last
              type: string
            reason:
              description: Reason shows why the status changed in last
              type: string
            status:
              description: Status shows the present status of the NamespaceClaim
              enum:
              - Awaiting
              - Approved
              - Rejected
              - Error
              - Role Binding Deleted
              type: string
          type: object
        subjects:
          description: Subjects contains a reference to the object or user identities
            a role binding applies to.  This can either hold a direct API object reference,
            or a value for non-objects such as user and group names.
          items:
            description: Subject contains a reference to the object or user identities
              a role binding applies to.  This can either hold a direct API object
              reference, or a value for non-objects such as user and group names.
            properties:
              apiGroup:
                description: APIGroup holds the API group of the referenced subject.
                  Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io"
                  for User and Group subjects.
                type: string
              kind:
                description: Kind of object being referenced. Values defined by this
                  API group are "User", "Group", and "ServiceAccount". If the Authorizer
                  does not recognized the kind value, the Authorizer should report
                  an error.
                type: string
              name:
                description: Name of the object being referenced.
                type: string
              namespace:
                description: Namespace of the referenced object.  If the object kind
                  is non-namespace, such as "User" or "Group", and this value is not
                  empty the Authorizer should report an error.
                type: string
            required:
            - kind
            - name
            type: object
          type: array
      required:
      - roleRef
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
