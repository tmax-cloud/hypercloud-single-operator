apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: hypercloud5-system/hypercloud-single-operator-serving-cert
    controller-gen.kubebuilder.io/version: v0.6.2
  name: namespaceclaims.claim.tmax.io
spec:
  group: claim.tmax.io
  names:
    kind: NamespaceClaim
    listKind: NamespaceClaimList
    plural: namespaceclaims
    shortNames:
    - nsc
    singular: namespaceclaim
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .resourceName
      name: ResourceName
      type: string
    - jsonPath: .status.status
      name: Status
      type: string
    - jsonPath: .status.reason
      name: Reason
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NamespaceClaim is the Schema for the namespaceclaims API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          resourceName:
            description: namespaceName is name of the namespace which will be created
            type: string
          spec:
            description: Spec is ResourceQuotaSpec of NamespaceClaim
            properties:
              hard:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                description: 'hard is the set of desired hard limits for each named
                  resource. "limits.cpu" and "limits.memory" must be required. For
                  memory, value can be "Ki", "Mi", "Gi", "Ti", "Pi", "Ei", "K", "M",
                  "G", "T", "P" and "E". More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/'
                type: object
              scopeSelector:
                description: scopeSelector is also a collection of filters like scopes
                  that must match each object tracked by a quota but expressed using
                  ScopeSelectorOperator in combination with possible values. For a
                  resource to match, both scopes AND scopeSelector (if specified in
                  spec), must be matched.
                properties:
                  matchExpressions:
                    description: A list of scope selector requirements by scope of
                      the resources.
                    items:
                      description: A scoped-resource selector requirement is a selector
                        that contains values, a scope name, and an operator that relates
                        the scope name and values.
                      properties:
                        operator:
                          description: Represents a scope's relationship to a set
                            of values. Valid operators are In, NotIn, Exists, DoesNotExist.
                          type: string
                        scopeName:
                          description: The name of the scope that the selector applies
                            to.
                          type: string
                        values:
                          description: An array of string values. If the operator
                            is In or NotIn, the values array must be non-empty. If
                            the operator is Exists or DoesNotExist, the values array
                            must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - operator
                      - scopeName
                      type: object
                    type: array
                type: object
              scopes:
                description: A collection of filters that must match each object tracked
                  by a quota. If not specified, the quota matches all objects.
                items:
                  description: A ResourceQuotaScope defines a filter that must match
                    each object tracked by a quota
                  type: string
                type: array
            required:
            - hard
            type: object
          status:
            description: Status shows the present status of the NamespaceClaim
            properties:
              lastTransitionTime:
                description: LastTransitionTime shows the time when the status changed
                  in last
                format: date-time
                type: string
              message:
                description: Message shows log when the status changed in last
                type: string
              reason:
                description: Reason shows why the status changed in last
                type: string
              status:
                description: Status shows the present status of the NamespaceClaim
                enum:
                - Awaiting
                - Approved
                - Rejected
                - Error
                - Namespace Deleted
                type: string
            type: object
        required:
        - resourceName
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: hypercloud5-system/hypercloud-single-operator-serving-cert
    controller-gen.kubebuilder.io/version: v0.6.2
  name: resourcequotaclaims.claim.tmax.io
spec:
  group: claim.tmax.io
  names:
    kind: ResourceQuotaClaim
    listKind: ResourceQuotaClaimList
    plural: resourcequotaclaims
    shortNames:
    - rqc
    singular: resourcequotaclaim
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: Status
      type: string
    - jsonPath: .status.reason
      name: Reason
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ResourceQuotaClaim is the Schema for the resourcequotaclaims
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec is ResourceQuotaSpec of NamespaceClaim
            properties:
              hard:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                description: 'hard is the set of desired hard limits for each named
                  resource. "limits.cpu" and "limits.memory" must be required. For
                  memory, value can be "Ki", "Mi", "Gi", "Ti", "Pi", "Ei", "K", "M",
                  "G", "T", "P" and "E". More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/'
                type: object
              scopeSelector:
                description: scopeSelector is also a collection of filters like scopes
                  that must match each object tracked by a quota but expressed using
                  ScopeSelectorOperator in combination with possible values. For a
                  resource to match, both scopes AND scopeSelector (if specified in
                  spec), must be matched.
                properties:
                  matchExpressions:
                    description: A list of scope selector requirements by scope of
                      the resources.
                    items:
                      description: A scoped-resource selector requirement is a selector
                        that contains values, a scope name, and an operator that relates
                        the scope name and values.
                      properties:
                        operator:
                          description: Represents a scope's relationship to a set
                            of values. Valid operators are In, NotIn, Exists, DoesNotExist.
                          type: string
                        scopeName:
                          description: The name of the scope that the selector applies
                            to.
                          type: string
                        values:
                          description: An array of string values. If the operator
                            is In or NotIn, the values array must be non-empty. If
                            the operator is Exists or DoesNotExist, the values array
                            must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - operator
                      - scopeName
                      type: object
                    type: array
                type: object
              scopes:
                description: A collection of filters that must match each object tracked
                  by a quota. If not specified, the quota matches all objects.
                items:
                  description: A ResourceQuotaScope defines a filter that must match
                    each object tracked by a quota
                  type: string
                type: array
            required:
            - hard
            type: object
          status:
            description: Status shows the present status of the ResourceQuotaClaim
            properties:
              lastTransitionTime:
                description: LastTransitionTime shows the time when the status changed
                  in last
                format: date-time
                type: string
              message:
                description: Message shows log when the status changed in last
                type: string
              reason:
                description: Reason shows why the status changed in last
                type: string
              status:
                description: Status shows the present status of the NamespaceClaim
                enum:
                - Awaiting
                - Approved
                - Rejected
                - Error
                - Resource Quota Deleted
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: rolebindingclaims.claim.tmax.io
spec:
  group: claim.tmax.io
  names:
    kind: RoleBindingClaim
    listKind: RoleBindingClaimList
    plural: rolebindingclaims
    shortNames:
    - rbc
    singular: rolebindingclaim
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: Status
      type: string
    - jsonPath: .status.reason
      name: Reason
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RoleBindingClaim is the Schema for the rolebindingclaims API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          roleRef:
            description: RoleRef contains information that points to the role being
              used
            properties:
              apiGroup:
                description: APIGroup is the group for the resource being referenced
                type: string
              kind:
                description: Kind is the type of resource being referenced
                type: string
              name:
                description: Name is the name of resource being referenced
                type: string
            required:
            - apiGroup
            - kind
            - name
            type: object
          status:
            description: Status shows the present status of the RoleBindingClaim
            properties:
              lastTransitionTime:
                description: LastTransitionTime shows the time when the status changed
                  in last
                format: date-time
                type: string
              message:
                description: Message shows log when the status changed in last
                type: string
              reason:
                description: Reason shows why the status changed in last
                type: string
              status:
                description: Status shows the present status of the NamespaceClaim
                enum:
                - Awaiting
                - Approved
                - Rejected
                - Error
                - Role Binding Deleted
                type: string
            type: object
          subjects:
            description: Subjects contains a reference to the object or user identities
              a role binding applies to.  This can either hold a direct API object
              reference, or a value for non-objects such as user and group names.
            items:
              description: Subject contains a reference to the object or user identities
                a role binding applies to.  This can either hold a direct API object
                reference, or a value for non-objects such as user and group names.
              properties:
                apiGroup:
                  description: APIGroup holds the API group of the referenced subject.
                    Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io"
                    for User and Group subjects.
                  type: string
                kind:
                  description: Kind of object being referenced. Values defined by
                    this API group are "User", "Group", and "ServiceAccount". If the
                    Authorizer does not recognized the kind value, the Authorizer
                    should report an error.
                  type: string
                name:
                  description: Name of the object being referenced.
                  type: string
                namespace:
                  description: Namespace of the referenced object.  If the object
                    kind is non-namespace, such as "User" or "Group", and this value
                    is not empty the Authorizer should report an error.
                  type: string
              required:
              - kind
              - name
              type: object
            type: array
        required:
        - roleRef
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hypercloud-single-operator-service-account
  namespace: hypercloud5-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: hypercloud-single-operator-leader-election-role
  namespace: hypercloud5-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: hypercloud-single-operator-manager-role
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io.tmax.io
  resources:
  - rolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io.tmax.io
  resources:
  - rolebindings/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hypercloud-single-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hypercloud-single-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hypercloud-single-operator-leader-election-rolebinding
  namespace: hypercloud5-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: hypercloud-single-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: hypercloud-single-operator-service-account
  namespace: hypercloud5-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hypercloud-single-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hypercloud-single-operator-manager-role
subjects:
- kind: ServiceAccount
  name: hypercloud-single-operator-service-account
  namespace: hypercloud5-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hypercloud-single-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hypercloud-single-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: hypercloud-single-operator-service-account
  namespace: hypercloud5-system
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: hypercloud-single-operator-service-account
  name: hypercloud-single-operator-service-account-token
  namespace: hypercloud5-system
type: kubernetes.io/service-account-token
---
apiVersion: v1
kind: Service
metadata:
  labels:
    hypercloud: single-operator
  name: hypercloud-single-operator-controller-manager-metrics-service
  namespace: hypercloud5-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    hypercloud: single-operator
---
apiVersion: v1
kind: Service
metadata:
  name: hypercloud-single-operator-webhook-service
  namespace: hypercloud5-system
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    hypercloud: single-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    hypercloud: single-operator
  name: hypercloud-single-operator-controller-manager
  namespace: hypercloud5-system
spec:
  replicas: 1
  selector:
    matchLabels:
      hypercloud: single-operator
  template:
    metadata:
      labels:
        hypercloud: single-operator
    spec:
      containers:
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        - --zap-log-level=info
        command:
        - /manager
        image: tmaxcloudck/hypercloud-single-operator:b5.1.1.0
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: hypercloud-single-operator-service-account-token
          readOnly: true
        - mountPath: /logs
          name: operator-log-mnt
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: hypercloud-single-operator-service-account-token
          readOnly: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: hypercloud-single-operator-service-account
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: hypercloud-single-operator-webhook-server-cert
      - name: hypercloud-single-operator-service-account-token
        secret:
          defaultMode: 420
          secretName: hypercloud-single-operator-service-account-token
      - name: operator-log-mnt
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: hypercloud-single-operator-serving-cert
  namespace: hypercloud5-system
spec:
  dnsNames:
  - hypercloud-single-operator-webhook-service.hypercloud5-system.svc
  - hypercloud-single-operator-webhook-service.hypercloud5-system.svc.cluster.local
  issuerRef:
    kind: ClusterIssuer
    name: tmaxcloud-issuer
  secretName: hypercloud-single-operator-webhook-server-cert
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: hypercloud5-system/hypercloud-single-operator-serving-cert
  name: hypercloud-single-operator-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1beta1
  - v1
  clientConfig:
    service:
      name: hypercloud-single-operator-webhook-service
      namespace: hypercloud5-system
      path: /validate-claim-tmax-io-v1alpha1-namespaceclaim
  failurePolicy: Fail
  name: vnamespaceclaim.kb.io
  rules:
  - apiGroups:
    - claim.tmax.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - namespaceclaims
    - namespaceclaims/status
  sideEffects: NoneOnDryRun
- admissionReviewVersions:
  - v1beta1
  - v1
  clientConfig:
    service:
      name: hypercloud-single-operator-webhook-service
      namespace: hypercloud5-system
      path: /validate-claim-tmax-io-v1alpha1-resourcequotaclaim
  failurePolicy: Fail
  name: vresourcequotaclaim.kb.io
  rules:
  - apiGroups:
    - claim.tmax.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - resourcequotaclaims
    - resourcequotaclaims/status
  sideEffects: NoneOnDryRun
- admissionReviewVersions:
  - v1beta1
  - v1
  clientConfig:
    service:
      name: hypercloud-single-operator-webhook-service
      namespace: hypercloud5-system
      path: /validate-claim-tmax-io-v1alpha1-rolebindingclaim
  failurePolicy: Fail
  name: vrolebindingclaim.kb.io
  rules:
  - apiGroups:
    - claim.tmax.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - rolebindingclaims
    - rolebindingclaims/status
  sideEffects: NoneOnDryRun
